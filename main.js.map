{"version":3,"sources":["webpack:///../ng-timer/src/lib/models.ts","webpack:///../ng-timer/src/lib/timer-controls/timer-controls.component.html","webpack:///../ng-timer/src/lib/timer-controls/timer-controls.component.scss","webpack:///../ng-timer/src/lib/timer-controls/timer-controls.component.ts","webpack:///../ng-timer/src/lib/timer-input/timer-input.component.html","webpack:///../ng-timer/src/lib/timer-input/timer-input.component.scss","webpack:///../ng-timer/src/lib/timer-input/timer-input.component.ts","webpack:///../ng-timer/src/lib/timer.module.ts","webpack:///../ng-timer/src/lib/timer/timer.component.html","webpack:///../ng-timer/src/lib/timer/timer.component.scss","webpack:///../ng-timer/src/lib/timer/timer.component.ts","webpack:///../ng-timer/src/lib/timer/timer.service.ts","webpack:///../ng-timer/src/public_api.ts","webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/example/example.component.html","webpack:///./src/app/example/example.component.scss","webpack:///./src/app/example/example.component.ts","webpack:///./src/app/shared/all-material-imports.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Observable, BehaviorSubject, Subject } from 'rxjs';\n\nexport enum Unit {\n  Milliseconds = 'ms',\n  Seconds = 's',\n  Minutes = 'm',\n  Hours = 'h',\n}\n\nexport interface SelectListItem<T> {\n  name: string;\n  value: T;\n}\n\nexport interface TimerOptions {\n  startTime?: number;\n  units?: Unit;\n  interval?: number;\n  timeFormat?: string;\n  countdown?: boolean;\n  autostart?: boolean;\n  locale?: string;\n}\n\nexport interface Timer extends TimerOptions {\n  timer$: Observable<number>;\n  interval$: Observable<number>;\n  pause$: BehaviorSubject<boolean>;\n  reset$: Subject<void>;\n  addTime$: BehaviorSubject<number>;\n}\n\nexport interface Timers {\n  [key: string]: Timer;\n}\n","module.exports = \"<span *ngIf=\\\"timer\\\">\\n  <button mat-icon-button *ngIf=\\\"!(timer.timer$ | async)\\\" (click)=\\\"startTimer()\\\">\\n    <mat-icon>play_arrow</mat-icon>\\n  </button>\\n  <span *ngIf=\\\"timer.timer$ | async\\\">\\n    <button mat-icon-button (click)=\\\"toggleTimer()\\\">\\n      <mat-icon>{{(timer.pause$ | async) ? 'play_arrow' : 'pause'}}</mat-icon>\\n    </button>\\n    <ng-content></ng-content>\\n    <button mat-icon-button (click)=\\\"stopTimer()\\\">\\n      <mat-icon>stop</mat-icon>\\n    </button>\\n    <button mat-icon-button (click)=\\\"startTimer()\\\">\\n      <mat-icon>replay</mat-icon>\\n    </button>\\n  </span>\\n  <button mat-button *ngIf=\\\"timer.timer$ | async\\\" (click)=\\\"timerService.addTime(name, 30000)\\\">\\n    Add 30 seconds\\n  </button>\\n</span>\"","module.exports = \"input {\\n  text-align: center; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3ZzdHMvd29yay8xL3MvcHJvamVjdHMvbmctdGltZXIvc3JjL2xpYi90aW1lci1jb250cm9scy90aW1lci1jb250cm9scy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFHQTtFQUNFLG1CQUFrQixFQUNuQiIsImZpbGUiOiJwcm9qZWN0cy9uZy10aW1lci9zcmMvbGliL3RpbWVyLWNvbnRyb2xzL3RpbWVyLWNvbnRyb2xzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gLmZvcm0tY29udHJvbCB7XG4vLyAgIHdpZHRoOiA1MHB4O1xuLy8gfVxuaW5wdXQge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59Il19 */\"","import { Component, Input, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { TimerService } from '../timer/timer.service';\nimport { Timer } from '../models';\n\n@Component({\n  selector: 'ng-timer-controls',\n  templateUrl: './timer-controls.component.html',\n  styleUrls: ['./timer-controls.component.scss']\n})\nexport class TimerControlsComponent implements OnInit, OnDestroy {\n  @Input()\n  name = 'timer';\n\n  @Input()\n  timeFcn: (value: number) => void = (() => {});\n\n  timer: Timer;\n  timerSubscription: Subscription;\n\n  constructor(public timerService: TimerService) {}\n\n  ngOnInit() {\n    this.timer = this.timerService.timers[this.name];\n  }\n\n  startTimer() {\n    if (this.timerSubscription) {\n      this.timerSubscription.unsubscribe();\n    }\n\n    this.timerSubscription = this.timerService.start(this.name)\n      .subscribe(this.timeFcn);\n  }\n\n  toggleTimer() {\n    this.timerService.toggle(this.name);\n  }\n\n  stopTimer() {\n    this.timerService.stop(this.name);\n  }\n\n  ngOnDestroy() {\n    this.timerSubscription.unsubscribe();\n  }\n}\n","module.exports = \"<form #form=\\\"ngForm\\\" *ngIf=\\\"timer\\\">\\n  <mat-form-field *ngIf=\\\"showStartTime\\\">\\n    <input matInput type=\\\"number\\\" required [(ngModel)]=\\\"timer.startTime\\\" name=\\\"startTime\\\" placeholder=\\\"Start Time\\\">\\n    <span matSuffix>{{timer.units}}</span>\\n  </mat-form-field>\\n  <mat-form-field *ngIf=\\\"showUnits\\\">\\n    <mat-select [(ngModel)]=\\\"timer.units\\\" name=\\\"units\\\" placeholder=\\\"Units\\\">\\n      <mat-option *ngFor=\\\"let unitType of unitTypes\\\" [value]=\\\"unitType.value\\\">\\n        {{ unitType.name }}\\n      </mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n  <mat-form-field *ngIf=\\\"showTimeFormat\\\">\\n    <mat-select [(ngModel)]=\\\"timer.timeFormat\\\" name=\\\"timeFormat\\\" placeholder=\\\"Time Format\\\">\\n      <mat-option *ngFor=\\\"let tf of timeFormats\\\" [value]=\\\"tf\\\">\\n        {{ tf }}\\n      </mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n  <mat-checkbox *ngIf=\\\"showCountdown\\\" [(ngModel)]=\\\"timer.countdown\\\" name=\\\"countdown\\\">Countdown</mat-checkbox>\\n  <mat-checkbox *ngIf=\\\"showAutostart\\\" [(ngModel)]=\\\"timer.autostart\\\" name=\\\"autostart\\\">Auto Start</mat-checkbox>\\n</form>\"","module.exports = \"form {\\n  min-width: 150px;\\n  max-width: 150px;\\n  width: 100%; }\\n\\nmat-form-field {\\n  width: 100%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3ZzdHMvd29yay8xL3MvcHJvamVjdHMvbmctdGltZXIvc3JjL2xpYi90aW1lci1pbnB1dC90aW1lci1pbnB1dC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGlCQUFnQjtFQUNoQixpQkFBZ0I7RUFDaEIsWUFBVyxFQUNaOztBQUVEO0VBQ0UsWUFBVyxFQUNaIiwiZmlsZSI6InByb2plY3RzL25nLXRpbWVyL3NyYy9saWIvdGltZXItaW5wdXQvdGltZXItaW5wdXQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJmb3JtIHtcbiAgbWluLXdpZHRoOiAxNTBweDtcbiAgbWF4LXdpZHRoOiAxNTBweDtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbm1hdC1mb3JtLWZpZWxkIHtcbiAgd2lkdGg6IDEwMCU7XG59Il19 */\"","import { Component, Input, OnInit} from '@angular/core';\nimport { Unit, SelectListItem } from '../models';\nimport { TimerService } from '../timer/timer.service';\nimport { Timer } from '../models';\n\n@Component({\n  selector: 'ng-timer-input',\n  templateUrl: './timer-input.component.html',\n  styleUrls: ['./timer-input.component.scss']\n})\nexport class TimerInputComponent implements OnInit {\n  @Input()\n  name = 'timer';\n\n  @Input()\n  showStartTime = true;\n\n  @Input()\n  showUnits = false;\n\n  @Input()\n  showTimeFormat = false;\n\n  @Input()\n  showCountdown = false;\n\n  @Input()\n  showAutostart = false;\n\n  timer: Timer;\n\n  unitTypes: SelectListItem<string>[];\n  timeFormats: string[];\n\n  constructor(public timerService: TimerService) {}\n\n  ngOnInit() {\n    this.timer = this.timerService.timers[this.name];\n\n    if (this.timer) {\n      this.unitTypes = Object.keys(Unit)\n        .filter(key => typeof Unit[key] === 'string')\n        .map(key => ({ name: key, value: Unit[key] }));\n      this.timeFormats = [\n        'mm:ss',\n        'mm:ss.SSS',\n        'hh:mm:ss.SSS',\n        'hh:mm:ss'\n      ];\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { MatButtonModule, MatFormFieldModule, MatIconModule, MatInputModule, MatSelectModule, MatCheckboxModule } from '@angular/material';\nimport { TimerComponent } from './timer/timer.component';\nimport { TimerInputComponent } from './timer-input/timer-input.component';\nimport { TimerControlsComponent } from './timer-controls/timer-controls.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatSelectModule,\n    MatCheckboxModule\n  ],\n  declarations: [\n    TimerComponent,\n    TimerInputComponent,\n    TimerControlsComponent\n  ],\n  exports: [\n    TimerComponent,\n    TimerInputComponent,\n    TimerControlsComponent\n  ]\n})\nexport class TimerModule { }\n","module.exports = \"<span *ngIf=\\\"timer\\\">\\n  {{ ((timer.timer$ | async) || 0) || timerService.startTimeMS(name) | date:timer.timeFormat }}\\n</span>\"","module.exports = \"input {\\n  text-align: center; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3ZzdHMvd29yay8xL3MvcHJvamVjdHMvbmctdGltZXIvc3JjL2xpYi90aW1lci90aW1lci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFHQTtFQUNFLG1CQUFrQixFQUNuQiIsImZpbGUiOiJwcm9qZWN0cy9uZy10aW1lci9zcmMvbGliL3RpbWVyL3RpbWVyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gLmZvcm0tY29udHJvbCB7XG4vLyAgIHdpZHRoOiA1MHB4O1xuLy8gfVxuaW5wdXQge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59Il19 */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { TimerService } from './timer.service';\nimport { Timer } from '../models';\n\n@Component({\n  selector: 'ng-timer',\n  templateUrl: './timer.component.html',\n  styleUrls: ['./timer.component.scss']\n})\nexport class TimerComponent implements OnInit {\n  @Input()\n  name = 'timer';\n  timer: Timer;\n\n  constructor(public timerService: TimerService) {}\n\n  ngOnInit() {\n    this.timer = this.timerService.timers[this.name];\n\n    if (this.timer && this.timer.autostart) {\n      this.timerService.start(this.name);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { interval, BehaviorSubject, Subject, NEVER, EMPTY, Observable, combineLatest } from 'rxjs';\nimport { switchMap, scan, takeWhile, startWith, mapTo, takeUntil, map } from 'rxjs/operators';\nimport { Unit, TimerOptions, Timer, Timers } from '../models';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TimerService {\n  private defaultTimerOptions: TimerOptions = {\n    startTime: 0,\n    units: Unit.Milliseconds,\n    timeFormat: 'mm:ss.SSS',\n    countdown: false,\n    autostart: false,\n    interval: 100,\n    locale: 'en-US',\n  };\n\n  timers: Timers = {};\n\n  newTimer(timerName: string, timerOptions?: TimerOptions): Timer {\n    if (!timerName) {\n      throw(new Error('timerName required'));\n    }\n\n    if (!this.timers[timerName]) {\n      this.timers[timerName] = {\n        ...this.defaultTimerOptions,\n        ...timerOptions,\n        timer$: NEVER,\n        interval$: NEVER,\n        pause$: new BehaviorSubject(true),\n        reset$: new Subject(),\n        addTime$: new BehaviorSubject(1),\n      };\n    }\n\n    return this.timers[timerName];\n  }\n\n  start(timerName: string): Observable<number> {\n    const timerObj = this.timers[timerName];\n\n    if (timerObj) {\n      timerObj.reset$.next();\n\n      timerObj.interval$ =\n        combineLatest(\n          interval(timerObj.interval).pipe(\n            startWith(0),\n            mapTo((timerObj.countdown ? -1 : 1)),\n            takeUntil(timerObj.reset$)\n          ),\n          timerObj.addTime$\n        ).pipe(\n          map(([int, add]) => int * add)\n        );\n\n      timerObj.pause$.next(false);\n\n      timerObj.timer$ = timerObj.pause$\n        .pipe(\n          switchMap(val => (!val ? timerObj.interval$ : EMPTY)),\n          scan((acc, curr) => (curr ? curr + acc : acc), this.startTimeMS(timerName) / timerObj.interval),\n          map(x => x * timerObj.interval),\n          takeUntil(timerObj.reset$),\n          takeWhile(t => t >= 0)\n        );\n\n      return timerObj.timer$;\n    }\n  }\n\n  addTime(timerName: string, ms: number) {\n    const timerObj = this.timers[timerName];\n\n    if (timerObj) {\n      timerObj.addTime$.next((timerObj.countdown ? -1 : 1) * ms / timerObj.interval);\n      timerObj.addTime$.next(1);\n    }\n  }\n\n  stop(timerName: string) {\n    const timerObj = this.timers[timerName];\n    if (timerObj) {\n      timerObj.reset$.next();\n      timerObj.pause$.next(true);\n      timerObj.timer$ = NEVER;\n    }\n  }\n\n  toggle(timerName: string) {\n    const timerObj = this.timers[timerName];\n    if (timerObj) {\n      timerObj.pause$.next(!timerObj.pause$.value);\n    }\n  }\n\n  startTimeMS(timerName: string) {\n    const timerObj = this.timers[timerName];\n\n    if (timerObj) {\n      return timerObj.units === Unit.Seconds\n        ? timerObj.startTime * 1000\n        : timerObj.units === Unit.Minutes\n          ? timerObj.startTime * 1000 * 60\n          : timerObj.units === Unit.Hours\n            ? timerObj.startTime * 1000 * 60 * 60\n            : timerObj.startTime;\n    }\n  }\n}\n","/*\n * Public API Surface of ng-timer\n */\n\nexport * from './lib/timer/timer.component';\nexport * from './lib/timer/timer.service';\nexport * from './lib/timer-controls/timer-controls.component';\nexport * from './lib/timer-input/timer-input.component';\nexport * from './lib/models';\nexport * from './lib/timer.module';\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"container\\\" [ngClass]=\\\"isDarkTheme ? 'dark-theme' : ''\\\">\\n  <mat-toolbar color=\\\"primary\\\" fxLayoutAlign=\\\"space-between center\\\">\\n    <div>Timer</div>\\n    <span>Dark Theme&nbsp;&nbsp;<mat-checkbox [(ngModel)]=\\\"isDarkTheme\\\"></mat-checkbox></span>\\n  </mat-toolbar>\\n  <div class=\\\"page-content\\\" fxLayout=\\\"column\\\" fxLayoutGap=\\\"1rem\\\">\\n    <app-example [name]=\\\"timer1\\\" [timeFcn]=\\\"timeFcn\\\"></app-example>\\n    <app-example [name]=\\\"timer2\\\" [timeFcn]=\\\"timeFcn\\\"></app-example>\\n  <div>\\n<div>\"","module.exports = \".page-content {\\n  padding: 2rem;\\n  min-width: 300px; }\\n\\n.container {\\n  width: 100vw;\\n  height: 100vh; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3ZzdHMvd29yay8xL3MvcHJvamVjdHMvbmctdGltZXItZG9jcy9zcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGNBQWE7RUFDYixpQkFBZ0IsRUFDakI7O0FBRUQ7RUFDRSxhQUFZO0VBQ1osY0FBYSxFQUNkIiwiZmlsZSI6InByb2plY3RzL25nLXRpbWVyLWRvY3Mvc3JjL2FwcC9hcHAuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucGFnZS1jb250ZW50IHtcbiAgcGFkZGluZzogMnJlbTtcbiAgbWluLXdpZHRoOiAzMDBweDtcbn1cblxuLmNvbnRhaW5lciB7XG4gIHdpZHRoOiAxMDB2dztcbiAgaGVpZ2h0OiAxMDB2aDtcbn0iXX0= */\"","import { Component } from '@angular/core';\nimport { TimerService, Unit } from '@devrec/ng-timer';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  timer1 = 'timer1';\n  timer2 = 'timer2';\n  isDarkTheme = true;\n\n  timeFcn = (x => {\n    if (x === 31000 || x === 30000 || x === 29000) {\n      console.log(x);\n    } else if (x === 2000) {\n      console.log(x);\n    } else if (x === 0) {\n      console.log(x);\n    }\n  });\n\n  constructor(timerService: TimerService) {\n    timerService.newTimer(this.timer1);\n    timerService.newTimer(this.timer2, {\n      startTime: 15,\n      units: Unit.Minutes,\n      countdown: true,\n      autostart: true,\n      timeFormat: 'mm:ss.SSS'\n    });\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { TimerModule } from '@devrec/ng-timer';\n\nimport { AppComponent } from './app.component';\nimport { AllMaterialImportsModule } from './shared/all-material-imports.module';\nimport { ExampleComponent } from './example/example.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ExampleComponent,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AllMaterialImportsModule,\n    TimerModule,\n    BrowserAnimationsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<mat-card *ngIf=\\\"name\\\">\\n  <mat-card-title>Basic Example</mat-card-title>\\n  <mat-card-content fxLayout=\\\"column\\\">\\n    <ng-timer [name]=\\\"name\\\"></ng-timer>\\n    <ng-timer-controls [name]=\\\"name\\\" [timeFcn]=\\\"timeFcn\\\"></ng-timer-controls>\\n    <ng-timer-input [name]=\\\"name\\\" showUnits=\\\"true\\\" showTimeFormat=\\\"true\\\" showCountdown=\\\"true\\\" showAutostart=\\\"true\\\"></ng-timer-input>\\n  </mat-card-content>\\n</mat-card>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9qZWN0cy9uZy10aW1lci1kb2NzL3NyYy9hcHAvZXhhbXBsZS9leGFtcGxlLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-example',\n  templateUrl: './example.component.html',\n  styleUrls: ['./example.component.scss']\n})\nexport class ExampleComponent {\n  @Input()\n  name: string;\n  @Input()\n  timeFcn: (value: number) => void = (() => {});\n\n  constructor() { }\n}\n","import { NgModule } from '@angular/core';\nimport {\n  MatAutocompleteModule,\n  MatBadgeModule,\n  MatBottomSheetModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatCommonModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatDividerModule,\n  MatExpansionModule,\n  MatFormFieldModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatLineModule,\n  MatListModule,\n  MatMenuModule,\n  MatOptionModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatPseudoCheckboxModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatStepperModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatTooltipModule,\n  MatTreeModule\n} from '@angular/material';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { CdkAccordionModule } from '@angular/cdk/accordion';\nimport { CdkStepperModule } from '@angular/cdk/stepper';\nimport { CdkTreeModule } from '@angular/cdk/tree';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PlatformModule } from '@angular/cdk/platform';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { TextFieldModule } from '@angular/cdk/text-field';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n// cd node_modules/\\@angular/material &&\n//   find -name '*.ts' | while read file ; do cat $file | sed -n 's/.*class \\([A-Za-z0-9]*Module\\) .*/\\1/p'; done | sort | uniq\nexport const APP_SHARED_MATERIAL_MODULES = [\n  MatAutocompleteModule,\n  MatBadgeModule,\n  MatBottomSheetModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatCommonModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatDividerModule,\n  MatExpansionModule,\n  MatFormFieldModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatLineModule,\n  MatListModule,\n  MatMenuModule,\n  MatOptionModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatPseudoCheckboxModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatStepperModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatTooltipModule,\n  MatTreeModule\n  // NativeDateAdapter should never be used, either use one of the SnapDateAdapters, or the @angular/moment-date-adapter\n  // MatNativeDateModule,\n  // NativeDateModule,\n];\n\n// cd node_modules/\\@angular/cdk &&\n//   find -name '*.ts' | while read file ; do cat $file | sed -n 's/.*class \\([A-Za-z0-9]*Module\\) .*/\\1/p'; done | sort | uniq\nexport const APP_SHARED_CDK_MODULES = [\n  A11yModule,\n  BidiModule,\n  CdkAccordionModule,\n  CdkStepperModule,\n  CdkTableModule,\n  CdkTreeModule,\n  DragDropModule,\n  LayoutModule,\n  ObserversModule,\n  OverlayModule,\n  PlatformModule,\n  PortalModule,\n  ScrollingModule,\n  TextFieldModule,\n];\n\n/**\n * Includes all Material and CDK modules.  This makes\n * development easier, but does prevent tree shaking.\n *\n * If bundle size is determined to be an issue, and\n * source-map-explorer or similar points to material being\n * a significant factor, remove this module and switch to\n * importing the individual modules you need in the places\n * you need them.\n */\n@NgModule({\n  imports: [\n    ...APP_SHARED_MATERIAL_MODULES,\n    ...APP_SHARED_CDK_MODULES,\n    FlexLayoutModule\n  ],\n  exports: [\n    ...APP_SHARED_MATERIAL_MODULES,\n    ...APP_SHARED_CDK_MODULES,\n    FlexLayoutModule\n  ],\n  declarations: [\n  ],\n  providers: [\n  ]\n})\nexport class AllMaterialImportsModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}